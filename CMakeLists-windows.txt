cmake_minimum_required(VERSION 3.18)

project(VolumeVoronoiGPU LANGUAGES CXX CUDA)

set(CMAKE_CUDA_ARCHITECTURES 75)
set(EXTERNAL_DIR "${CMAKE_CURRENT_SOURCE_DIR}/extern")
set(VCPKG_DIR "${PROJECT_SOURCE_DIR}/../vcpkg/installed/x64-windows")

set(CMAKE_DEBUG_POSTFIX "d")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fPIC")
set(CMAKE_CXX_STANDARD 17)

# make CUDA runtime as interface
find_package(CUDAToolkit REQUIRED)
add_library(cuda_interface INTERFACE)
target_link_libraries(cuda_interface INTERFACE CUDA::cudart)

find_package(OpenMP)

# packages in vcpkg
include_directories(${VCPKG_DIR}/include)
include_directories(${VCPKG_DIR}/include/eigen3)
link_directories(${VCPKG_DIR}/lib)

add_subdirectory(${EXTERNAL_DIR}/polyscope)
add_subdirectory(extern/mshloader)

include_directories(${PROJECT_SOURCE_DIR}/src)

set(HEADER_LIST
    "src/cuda_utils.h"
    "src/params.h"
    "src/stopwatch.h"
    "src/io.h"
    "src/shrinking.h"
    "src/fix_topo.h"
    "src/voronoi_defs.h"
    "src/io_utils.hpp")

set(SOURCE_LIST
    "src/io.cu"
    "src/shrinking.cu"
    "src/topo.cu"
    "src/voronoi_defs.cu"
    "src/main_gui.cu"
    "src/main_voronoi.cu"
    "src/io_utils.cpp")

add_executable(VolumeVoronoiGPU ${SOURCE_LIST} ${HEADER_LIST})
set_property(TARGET VolumeVoronoiGPU PROPERTY CXX_STANDARD 17)
# add compile options
target_compile_options(VolumeVoronoiGPU PRIVATE $<$<COMPILE_LANGUAGE:CUDA>:
    --generate-line-info
    --use_fast_math
    -Xcompiler=/openmp
>)

target_link_libraries(VolumeVoronoiGPU
    cuda_interface
    #debug tetd
    tet
    zlib
    # OpenMP::OpenMP_CXX
    general CUDA::cublas
    general mshloader
    general polyscope
)

# copy dll
add_custom_command(TARGET VolumeVoronoiGPU POST_BUILD
    COMMAND ${CMAKE_COMMAND} -E copy_directory
    "${PROJECT_SOURCE_DIR}/../vcpkg/installed/x64-windows/bin"
    $<TARGET_FILE_DIR:VolumeVoronoiGPU>
)
